name: Deployment
on:
  push:
    branches:
      - "main"
      - "*"
  pull_request: {}
jobs:
  # lint:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v1
  #       with:
  #         node-version: '14'
  #     - name: Get code
  #       uses: actions/checkout@v3
  #     - name: Get & cache dependencies
  #       uses: ./.github/actions/cached-deps
  #     - name: Lint code
  #       run: yarn run lint
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Get code
        uses: actions/checkout@v3
      - name: Get & cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Test code
        continue-on-error: true
        id: run-tests
        run: yarn run test
      - name: Upload test report
        if: failure() && steps.run-tests.outcome == 'failure'
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test.json
          retention-days: 30
  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Get code
        uses: actions/checkout@v3
      - name: Get & cache dependencies
        uses: ./.github/actions/cached-deps
      - name: Build website
        run: yarn run build
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: dist-files
          path: build
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Set up Node.js
        uses: actions/setup-node@v1
        with:
          node-version: '14'
      - name: Get code
        uses: actions/checkout@v3
      - name: Get build artifacts
        uses: actions/download-artifact@v3
        with:
          name: dist-files
          path: ./build
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1
      - name: Deploy to S3 bucket
        run: aws s3 sync ./build/ s3://colot-palete-app --delete
  information:
    runs-on: ubuntu-latest
    steps:
      - name: Get code
        uses: actions/checkout@v3
      - name: Run custom action
        uses: ./.github/actions/deploy-s3-javascript
